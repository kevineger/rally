{"version":3,"sources":["jquery.tablesort.js"],"names":[],"mappingsfile":"all.js","sourcesContent":["/*\n\tA simple, lightweight jQuery plugin for creating sortable tables.\n\thttps://github.com/kylefox/jquery-tablesort\n\tVersion 0.0.6\n*/\n\n(function($) {\n\t$.tablesort = function ($table, settings) {\n\t\tvar self = this;\n\t\tthis.$table = $table;\n\t\tthis.$thead = this.$table.find('thead');\n\t\tthis.settings = $.extend({}, $.tablesort.defaults, settings);\n\t\tthis.$sortCells = this.$thead.length > 0 ? this.$thead.find('th:not(.no-sort)') : this.$table.find('th:not(.no-sort)');\n\t\tthis.$sortCells.bind('click.tablesort', function() {\n\t\t\tself.sort($(this));\n\t\t});\n\t\tthis.index = null;\n\t\tthis.$th = null;\n\t\tthis.direction = null;\n\t};\n\n\t$.tablesort.prototype = {\n\n\t\tsort: function(th, direction) {\n\t\t\tvar start = new Date(),\n\t\t\t\tself = this,\n\t\t\t\ttable = this.$table,\n\t\t\t\t//body = table.find('tbody').length > 0 ? table.find('tbody') : table,\n\t\t\t\trows = this.$thead.length > 0 ? table.find('tbody tr') : table.find('tr').has('td'),\n\t\t\t\tcells = table.find('tr td:nth-of-type(' + (th.index() + 1) + ')'),\n\t\t\t\tsortBy = th.data().sortBy,\n\t\t\t\tsortedMap = [];\n\n\t\t\tvar unsortedValues = cells.map(function(idx, cell) {\n\t\t\t\tif (sortBy)\n\t\t\t\t\treturn (typeof sortBy === 'function') ? sortBy($(th), $(cell), self) : sortBy;\n\t\t\t\treturn ($(this).data().sortValue != null ? $(this).data().sortValue : $(this).text());\n\t\t\t});\n\t\t\tif (unsortedValues.length === 0) return;\n\n\t\t\tif (direction !== 'asc' && direction !== 'desc')\n\t\t\t\tthis.direction = this.direction === 'asc' ? 'desc' : 'asc';\n\t\t\telse\n\t\t\t\tthis.direction = direction;\n\n\t\t\tdirection = this.direction == 'asc' ? 1 : -1;\n\n\t\t\tself.$table.trigger('tablesort:start', [self]);\n\t\t\tself.log(\"Sorting by \" + this.index + ' ' + this.direction);\n\n\t\t\t// Try to force a browser redraw\n\t\t\tself.$table.css(\"display\");\n\t\t\t// Run sorting asynchronously on a timeout to force browser redraw after\n\t\t\t// `tablesort:start` callback. Also avoids locking up the browser too much.\n\t\t\tsetTimeout(function() {\n\t\t\t\tself.$sortCells.removeClass(self.settings.asc + ' ' + self.settings.desc);\n\t\t\t\tfor (var i = 0, length = unsortedValues.length; i < length; i++)\n\t\t\t\t{\n\t\t\t\t\tsortedMap.push({\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tcell: cells[i],\n\t\t\t\t\t\trow: rows[i],\n\t\t\t\t\t\tvalue: unsortedValues[i]\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tsortedMap.sort(function(a, b) {\n\t\t\t\t\tif (a.value > b.value) {\n\t\t\t\t\t\treturn 1 * direction;\n\t\t\t\t\t} else if (a.value < b.value) {\n\t\t\t\t\t\treturn -1 * direction;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t$.each(sortedMap, function(i, entry) {\n\t\t\t\t\ttable.append(entry.row);\n\t\t\t\t});\n\n\t\t\t\tth.addClass(self.settings[self.direction]);\n\n\t\t\t\tself.log('Sort finished in ' + ((new Date()).getTime() - start.getTime()) + 'ms');\n\t\t\t\tself.$table.trigger('tablesort:complete', [self]);\n\t\t\t\t//Try to force a browser redraw\n\t\t\t\tself.$table.css(\"display\");\n\t\t\t}, unsortedValues.length > 2000 ? 200 : 10);\n\t\t},\n\n\t\tlog: function(msg) {\n\t\t\tif(($.tablesort.DEBUG || this.settings.debug) && console && console.log) {\n\t\t\t\tconsole.log('[tablesort] ' + msg);\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tthis.$sortCells.unbind('click.tablesort');\n\t\t\tthis.$table.data('tablesort', null);\n\t\t\treturn null;\n\t\t}\n\n\t};\n\n\t$.tablesort.DEBUG = false;\n\n\t$.tablesort.defaults = {\n\t\tdebug: $.tablesort.DEBUG,\n\t\tasc: 'sorted ascending',\n\t\tdesc: 'sorted descending'\n\t};\n\n\t$.fn.tablesort = function(settings) {\n\t\tvar table, sortable, previous;\n\t\treturn this.each(function() {\n\t\t\ttable = $(this);\n\t\t\tprevious = table.data('tablesort');\n\t\t\tif(previous) {\n\t\t\t\tprevious.destroy();\n\t\t\t}\n\t\t\ttable.data('tablesort', new $.tablesort(table, settings));\n\t\t});\n\t};\n\n})(window.Zepto || window.jQuery);\n"],"sourceRoot":"/source/"}